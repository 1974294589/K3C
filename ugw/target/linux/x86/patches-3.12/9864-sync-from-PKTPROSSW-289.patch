# HG changeset patch
# Parent d9d81f73bbc008d1ee1bfb08ba0e2fd423a98790
diff --git a/include/linux/avalanche/generic/avalanche_pdsp_api.h b/include/linux/avalanche/generic/avalanche_pdsp_api.h
--- a/include/linux/avalanche/generic/avalanche_pdsp_api.h
+++ b/include/linux/avalanche/generic/avalanche_pdsp_api.h
@@ -4,7 +4,7 @@
 
   GPL LICENSE SUMMARY
 
-  Copyright(c) 2015 Intel Corporation.
+  Copyright(c) 2015-2017 Intel Corporation.
 
   This program is free software; you can redistribute it and/or modify
   it under the terms of version 2 of the GNU General Public License as
@@ -29,7 +29,7 @@
 
   BSD LICENSE
 
-  Copyright(c) 2014 Intel Corporation. All rights reserved.
+  Copyright(c) 2014-2017 Intel Corporation. All rights reserved.
 
   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions
@@ -154,7 +154,8 @@ typedef enum
     PDSP_SESSION_CACHE_SESSION_CMD  = 0x83,
     PDSP_SESSION_CACHE_FLUSH_ALL    = 0x84,
     PDSP_SESSION_CACHE_SESSION_TIMEOUT  = 0x85,
-
+    PDSP_SESSION_CACHE_TIMEOUT_THRESHOLDS_SET = 0x86,
+    PDSP_SESSION_CACHE_TIMEOUT_THRESHOLDS_ENABLE = 0x87,
 
     // Moca Commands
     PDSP_MOCA_SET_PADDING                = 0x83,
diff --git a/include/linux/avalanche/generic/avalanche_pp_api.h b/include/linux/avalanche/generic/avalanche_pp_api.h
--- a/include/linux/avalanche/generic/avalanche_pp_api.h
+++ b/include/linux/avalanche/generic/avalanche_pp_api.h
@@ -4,7 +4,7 @@
 
   GPL LICENSE SUMMARY
 
-  Copyright(c) 2014-2016 Intel Corporation.
+  Copyright(c) 2014-2017 Intel Corporation.
 
   This program is free software; you can redistribute it and/or modify
   it under the terms of version 2 of the GNU General Public License as
@@ -29,7 +29,7 @@
 
   BSD LICENSE
 
-  Copyright(c) 2014-2016 Intel Corporation. All rights reserved.
+  Copyright(c) 2014-2017 Intel Corporation. All rights reserved.
 
   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions
@@ -763,6 +763,14 @@ typedef enum
 #define CLASSIFICATION_MODE_DEFAULT CLASSIFICATION_MODE_IPV4_IPV6
 #endif
 
+/* Session cache deletion thresholds */
+#ifdef CONFIG_SESS_TIMEOUT_BY_THRESH
+#define SESSION_CACHE_DEFAULT_TIMEOUT_BY_THRESHOLD_ENABLE  1
+#define SESSION_CACHE_DEFAULT_TIMEOUT_BY_THRESHOLD_LOW     100
+#define SESSION_CACHE_DEFAULT_TIMEOUT_BY_THRESHOLD_HIGH    1500
+#else
+#define SESSION_CACHE_DEFAULT_TIMEOUT_BY_THRESHOLD_ENABLE  0
+#endif
 
 typedef enum
 {
@@ -1798,6 +1806,10 @@ extern AVALANCHE_PP_RET_e    avalanche_p
 #if PUMA7_OR_NEWER_SOC_TYPE
 extern AVALANCHE_PP_RET_e    avalanche_pp_set_classification_mode(PP_CLASSIFICATION_MODE_e);
 extern PP_CLASSIFICATION_MODE_e avalanche_pp_get_classification_mode( void );
+#ifdef CONFIG_SESS_TIMEOUT_BY_THRESH
+extern AVALANCHE_PP_RET_e avalanche_pp_sess_timeout_thresholds_enable(Uint8);
+extern AVALANCHE_PP_RET_e avalanche_pp_sess_timeout_thresholds_set(Uint16, Uint16);
+#endif
 #endif
 
 /* MISC APIs */
diff --git a/net/ti.Kconfig b/net/ti.Kconfig
--- a/net/ti.Kconfig
+++ b/net/ti.Kconfig
@@ -274,6 +274,12 @@ config INTEL_PP_TUNNEL_SUPPORT
       Enable this to support L2TPv3 and GRE-MPLS tunnels by PP.
       This tunnels should be configured statically and regular session will not be created by PP.
 
+config SESS_TIMEOUT_BY_THRESH
+        bool "Enable Session timeout by thresholds mechanism"
+        default n
+        depends on TI_PACKET_PROCESSOR
+    help
+      Select if Sessions should be timedout according to high and low thresholds
       
 endmenu
 config INTEL_IRQ_THREAD_CHANGE_PRIORITY
