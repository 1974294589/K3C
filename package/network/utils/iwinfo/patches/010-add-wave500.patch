--- a/hardware.txt
+++ b/hardware.txt
@@ -58,3 +58,4 @@
 0x1814 0x3052 0x1814 0x0008    0      0  "RaLink"   "Rt3052"
 0x1814 0x3352 0x1814 0x000c    0      0  "RaLink"   "Rt3352"
 0x11ab 0x2a55 0x11ab 0x0000    0      0  "Marvell"  "88W8864"
+0x1bef 0x0810 0x1bef 0x0810    0      0  "Lantiq"  "Wave5xx"
--- a/iwinfo_wext.c
+++ b/iwinfo_wext.c
@@ -510,24 +510,49 @@
 	return (id->vendor_id > 0 && id->device_id > 0) ? 0 : -1;
 }
 
+static const struct iwinfo_hardware_entry *
+wext_get_hardware_entry(const char *ifname)
+{
+	struct iwinfo_hardware_id id;
+
+	if (wext_get_hardware_id(ifname, (char *)&id))
+		return NULL;
+
+	return iwinfo_hardware(&id);
+}
+
 static int wext_get_hardware_name(const char *ifname, char *buf)
 {
-	sprintf(buf, "Generic WEXT");
+	const struct iwinfo_hardware_entry *hw;
+
+	if (!(hw = wext_get_hardware_entry(ifname)))
+		sprintf(buf, "Generic Wext");
+	else
+		sprintf(buf, "%s %s", hw->vendor_name, hw->device_name);
+
 	return 0;
 }
 
 static int wext_get_txpower_offset(const char *ifname, int *buf)
 {
-	/* Stub */
-	*buf = 0;
-	return -1;
+	const struct iwinfo_hardware_entry *hw;
+
+	if (!(hw = wext_get_hardware_entry(ifname)))
+		return -1;
+
+	*buf = hw->txpower_offset;
+	return 0;
 }
 
 static int wext_get_frequency_offset(const char *ifname, int *buf)
 {
-	/* Stub */
-	*buf = 0;
-	return -1;
+	const struct iwinfo_hardware_entry *hw;
+
+	if (!(hw = wext_get_hardware_entry(ifname)))
+		return -1;
+
+	*buf = hw->frequency_offset;
+	return 0;
 }
 
 const struct iwinfo_ops wext_ops = {
